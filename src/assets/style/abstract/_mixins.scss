@use 'sass:map';
@use 'sass:math';
@use 'variables' as v;
@use 'functions' as f;

@mixin screen($bp, $type: map.get(v.$design, v.$type), $bp2: 0) {
  $breakpoint: f.breakpoint($bp);

  @if $type == max {
    @media (#{$type}-width: #{$breakpoint}px) {
      @content;
    }
  }

  @else if $type == min {
    @media (#{$type}-width: #{$breakpoint + 1}px) {
      @content;
    }
  } @else if $type == between {
    $breakpoint2: f.breakpoint($bp2);
    @media (min-width: #{$breakpoint + 1}px) and (max-width: #{$breakpoint2}px) {
      @content;
    }
  }
}

// support fallback
@mixin support-ie() {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

@mixin not-support ($condition) {
  @supports not (#{$condition}) {
    @content;
  }

  @include support-ie {
    @content;
  }
}

@mixin text-overflow($line: 1) {
  @if $line > 1 {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @else {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

@mixin custom-arrow($border-color: #e08859, $width: 50px, $height: 12px) {
  position: relative;
  width: $width;
  height: $height;

  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    border-right: 3px solid $border-color;
    border-bottom: 2px solid $border-color;
    transform: skew(45deg);
  }
}

@mixin custom-select($bg, $border-color, $color, $arrow-color) {
  .customSelect {
    position: relative;
    display: inline-block;

    select {
      appearance: none;
      padding: 0px 40px;
      line-height: 1.5;
      color: $color;
      cursor: pointer;
      background-color: $bg;
      border: 1px solid $border-color;
      border-radius: 5px;
    }

    &::after {
      content: '';
      position: absolute;
      top: 50%;
      right: 20%;
      width: 6px;
      height: 6px;
      border-right: 2px solid $arrow-color;
      border-bottom: 2px solid $arrow-color;
      transform: translateY(-60%) rotate(45deg);
      transform-origin: center;
    }
  }
}

@mixin deco-styles {
  position: relative;
  width: 35px;
  height: 12px;
  margin: 10px auto;

  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    border-right: 3px solid #e08859;
    border-bottom: 2px solid #e08859;
    transform: skew(45deg);
  }

  @include screen(1100) {
    transform: scale(.8);
  }
}
